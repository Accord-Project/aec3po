@prefix aec3po: <https://w3id.org/lbd/aec3po/> .
@prefix cc: <http://creativecommons.org/ns#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix dul: <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#> .
@prefix eli: <http://data.europa.eu/eli/ontology#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix quantitykind: <http://qudt.org/vocab/quantitykind/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix vann: <http://purl.org/vocab/vann/> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix unit: <http://qudt.org/vocab/unit/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix ifcOWL: <https://standards.buildingsmart.org/IFC/DEV/IFC4/ADD2/OWL/index.html> .
@prefix ex: <http://example.com/exampleOntology#> .
@prefix schema: <https://schema.org/> .

# Instantiate the Finnish Accessibility Document as a Document
ex:Finnish_Accessibility_Doc a aec3po:Document, owl:NamedIndividual ;
    dct:identifier <https://ym.fi/documents/1410903/35099218/Accessibility+of+Buildings.pdf/56f06cd3-4a27-6ee3-e553-e35731ffa70b/Accessibility+of+Buildings.pdf?t=1680607572789> ;
    dct:issued "2017-04-05"^^xsd:date ;
    dct:references <https://ym.fi/en/the-national-building-code-of-finland> ;
    dct:coverage aec3po:Finland .

# Instantiate the DocumentSubdivision that contains the Ramp example as a DocumentSubdivision
ex:Finnish_Accessibility_DocSubdivision_S2_SubS_2 a aec3po:DocumentSubdivision, owl:NamedIndividual ;
    dct:identifier "Finnish Accessibility/Section 2" ;
    dct:title "Passageway leading to a building" .

# Link the DocumentSubdivision to the Document using hasPart property
ex:Finnish_Accessibility_Doc dct:hasPart ex:Finnish_Accessibility_DocSubdivision_S2_Sub_2 . 

# Instantiate the statement
ex:ramp_statement a aec3po:Statement , owl:NamedIndividual ;
    aec3po:asText "The ramp referred to in subsection 1 above shall be easily noticeable and straight with a smooth, hard and non-slippery surface, width of at least 900 millimetres and, if the ramp is not connected to a fixed structure, a protective edge of at least 50 millimetres in height. There shall be a horizontal landing with a length of at least 1,500 millimetres at the lower and upper end of the ramp. The gradient of the ramp may not exceed five per cent. However, if the elevation difference is no more than 1,000 millimetres, the ramp may not have a gradient of more than eight per cent. In that case, the elevation difference of a continuous ramp may not be more than 500 millimetres, after which there shall be a horizontal intermediate landing with a length of at least 2,000 millimetres. However, in an outdoor area the ramp may have a gradient of more than five per cent only if it can be kept in a condition comparable with that of an indoor ramp. Provisions on railings, handrails and other arrangements intended to prevent falling down and misstepping are laid down by decree issued under section 117d, subsection 2 of the Land Use and Building Act." .

# Link the statement to the DocumentSubdivision using hasPart property
ex:Finnish_Accessibility_DocSubdivision_S2_Sub_2 dct:hasPart  ex:ramp_statement .

#-------Instantiate the checkStatements expressed in the statement

# Instantiate the ramp_humanEvaluatedCheckStatement_Noticeable as a subClassOf CheckStatement
ex:ramp_humanEvaluatedCheckStatement_Noticeable a aec3po:HumanEvaluatedCheckStatement , owl:NamedIndividual ;
    aec3po:asText "The ramp referred to in subsection 1 above shall be easily noticeable" ;
    rdf:type aec3po:CheckStatement . 

# Instantiate the ramp_humanEvaluatedCheckStatement_Straight as a subClassOf CheckStatement
ex:ramp_humanEvaluatedCheckStatement_Straight a aec3po:HumanEvaluatedCheckStatement , owl:NamedIndividual ;
    aec3po:asText "The ramp referred to in subsection 1 above shall be straight" ;
    rdf:type aec3po:CheckStatement .

# Instantiate the ramp_humanEvaluatedCheckStatement_Surface as a subClassOf CheckStatement
ex:ramp_humanEvaluatedCheckStatement_Surface a aec3po:HumanEvaluatedCheckStatement , owl:NamedIndividual;
    aec3po:asText "The ramp referred to in subsection 1 above shall be ... with a smooth, hard and non-slippery surface" ;
    rdf:type aec3po:CheckStatement .

# Instantiate the ramp_numericalCheckStatement_Width as a subClassOf CheckStatement
ex:ramp_numericalCheckStatement_Width a aec3po:NumericalCheckStatement , owl:NamedIndividual;
    rdf:type aec3po:CheckStatement .

# Instantiate the ramp_humanEvaluatedCheckStatement_FixedStructure as a subClassOf CheckStatement
ex:ramp_humanEvaluatedCheckStatement_FixedStructure a aec3po:HumanEvaluatedCheckStatement , owl:NamedIndividual;
    aec3po:asText "if the ramp is not connected to a fixed structure ..." ;
    rdf:type aec3po:CheckStatement .

# Instantiate the ramp_humanEvaluatedCheckStatement_ProtectiveEdge as a subClassOf CheckStatement
ex:ramp_humanEvaluatedCheckStatement_ProtectiveEdge a aec3po:HumanEvaluatedCheckStatement , owl:NamedIndividual ;
    rdf:type aec3po:CheckStatement .  

# Instantiate the ramp_numericalCheckStatement_LowerLandingLenght as a subClassOf CheckStatement
ex:ramp_numericalCheckStatement_LowerLandingLenght a aec3po:NumericalCheckStatement , owl:NamedIndividual ;
    rdf:type aec3po:CheckStatement .     

# Instantiate the ramp_numericalCheckStatement_UpperLandingLenght as a subClassOf CheckStatement
ex:ramp_numericalCheckStatement_UpperLandingLenght a aec3po:NumericalCheckStatement , owl:NamedIndividual ;
    rdf:type aec3po:CheckStatement .

# Instantiate the ramp_numericalCheckStatement_MaxGradient as a subClassOf CheckStatement
ex:ramp_numericalCheckStatement_MaxGradient a aec3po:NumericalCheckStatement , owl:NamedIndividual ;
    rdf:type aec3po:CheckStatement .    

# Instantiate the ramp_numericalCheckStatement_LowerLandingElev as a subClassOf CheckStatement
ex:ramp_numericalCheckStatement_LowerLandingElev a aec3po:NumericalCheckStatement , owl:NamedIndividual ;
    rdf:type aec3po:CheckStatement .   

# Instantiate the ramp_numericalCheckStatement_UpperLandingElev as a subClassOf CheckStatement
ex:ramp_numericalCheckStatement_UpperLandingElev a aec3po:NumericalCheckStatement , owl:NamedIndividual;
    rdf:type aec3po:CheckStatement .    

# Instantiate the ramp_numericalCheckStatement_IntLandingLenght as a subClassOf CheckStatement
ex:ramp_numericalCheckStatement_IntLandingLenght a aec3po:NumericalCheckStatement , owl:NamedIndividual;
    rdf:type aec3po:CheckStatement .   

# Instantiate the ramp_numericalCheckStatement_IntLandingElev as a subClassOf CheckStatement
ex:ramp_numericalCheckStatement_IntLandingElev a aec3po:NumericalCheckStatement , owl:NamedIndividual ;
    rdf:type aec3po:CheckStatement .  

# Instantiate the ramp_humanEvaluatedCheckStatement_IndoorCondition as a subClassOf CheckStatement
ex:ramp_humanEvaluatedCheckStatement_IndoorCondition a aec3po:HumanEvaluatedCheckStatement , owl:NamedIndividual ;
    rdf:type aec3po:CheckStatement . 


#-------Required Data informed by the Statement

# Instantiate the ramp as a FeatureOfInterest
ex:ramp a aec3po:FeatureOfInterest , owl:NamedIndividual ;
    rdf:type ifcOWL:ifcRamp ;
    aec3po:hasContext "https://search.bsdd.buildingsmart.org/uri/buildingsmart/ifc/4.3/class/IfcRamp" .

# Define the properties of the ramp and constraints based on the Statement
ex:rampNoticeable a aec3po:Property , owl:NamedIndividual ;
    aec3po:hasValue "true"^^xsd:boolean .

ex:rampStraight a aec3po:Property , owl:NamedIndividual ;
    aec3po:hasValue "true"^^xsd:boolean .

ex:rampSurface a aec3po:Property , owl:NamedIndividual;
    aec3po:asText "smooth, hard and non-slippery surface" ;
    aec3po:hasValue "true"^^xsd:boolean .

ex:rampWidth a aec3po:Property , owl:NamedIndividual ;
    aec3po:hasValue 900 ;
    qudt:hasUnit unit:MilliM ;
    aec3po:hasComparisonOperator aec3po:ComparisonOperator-ge .

ex:rampFixedStructure a aec3po:Property , owl:NamedIndividual ;
    aec3po:hasValue "false"^^xsd:boolean .
    
ex:rampProtectiveEdge a aec3po:Property , owl:NamedIndividual ;
    aec3po:hasValue 50 ;
    qudt:hasUnit unit:MilliM ;
    aec3po:hasComparisonOperator aec3po:ComparisonOperator-ge .

ex:rampLowerLandingLenght a aec3po:Property , owl:NamedIndividual ;
    aec3po:hasValue 1500 ;
    qudt:hasUnit unit:MilliM ;
    aec3po:hasComparisonOperator aec3po:ComparisonOperator-ge .  

ex:rampUpperLandingLenght a aec3po:Property , owl:NamedIndividual ;
    aec3po:hasValue 1500 ;
    qudt:hasUnit unit:MilliM ;
    aec3po:hasComparisonOperator aec3po:ComparisonOperator-ge .  

ex:rampMaxGradient a aec3po:Property , owl:NamedIndividual ;
    aec3po:hasValue "5"^^xsd:decimal ;
    aec3po:hasComparisonOperator aec3po:ComparisonOperator-le .   

ex:rampLowerLandingElev a aec3po:Property , owl:NamedIndividual ;
    aec3po:hasValue 500 ;
    qudt:hasUnit unit:MilliM ;
    aec3po:hasComparisonOperator aec3po:ComparisonOperator-le .          

ex:rampUpperLandingElev a aec3po:Property , owl:NamedIndividual ;
    aec3po:hasValue 1000 ;
    qudt:hasUnit unit:MilliM ;
    aec3po:hasComparisonOperator aec3po:ComparisonOperator-le .

ex:rampIntLandingLenght a aec3po:Property , owl:NamedIndividual ;
    aec3po:hasValue 2000 ;
    qudt:hasUnit unit:MilliM ;
    aec3po:hasComparisonOperator aec3po:ComparisonOperator-ge .

ex:rampIntLandingElev a aec3po:Property , owl:NamedIndividual ;
    aec3po:hasValue 500 ;
    qudt:hasUnit unit:MilliM ;
    aec3po:hasComparisonOperator aec3po:ComparisonOperator-le . 

ex:rampIndoorCondition a aec3po:Property , owl:NamedIndividual ;
    aec3po:hasValue "true"^^xsd:boolean .

ex:ramp_statement aec3po:hasRequiredData 
    ex:rampNoticeable ,
    ex:rampStraight ,
    ex:rampSurface ,
    ex:rampWidth ,
    ex:rampFixedStructure ,
    ex:rampProtectiveEdge ,
    ex:rampLowerLandingLenght ,
    ex:rampUpperLandingLenght ,
    ex:rampMaxGradient ,
    ex:rampLowerLandingElev ,
    ex:rampUpperLandingElev ,
    ex:rampIntLandingLenght ,
    ex:rampIntLandingElev ,
    ex:rampIndoorCondition .
  

# Define and Instantiate all the CheckMethod(s) that will operationalize the Statement defined above. The assumption here is that SWRL rules are handeling the "CheckAct".

ex:ramp_humanEvaluatedCheckMethod_Noticeable rdf:type aec3po:SWRLCheck , owl:NamedIndividual ;
  aec3po:operationalizes ex:ramp_humanEvaluatedCheckStatement_Noticeable . 

ex:ramp_humanEvaluatedCheckMethod_Straight rdf:type aec3po:SWRLCheck , owl:NamedIndividual ;
  aec3po:operationalizes ex:ramp_humanEvaluatedCheckStatement_Straight . 

ex:ramp_humanEvaluatedCheckMethod_Surface rdf:type aec3po:SWRLCheck , owl:NamedIndividual ;
  aec3po:operationalizes ex:ramp_humanEvaluatedCheckStatement_Surface . 

# Define  a checkMethod MaterialandArrangement that combines the three previous human evaluated check methods related to the material and arrangement of the ramp
  ex:ramp_humanEvaluatedCheckMethod_MaterialandArrangement rdf:type aec3po:SWRLCheck , owl:NamedIndividual ;
  aec3po:operationalizes 
    ex:ramp_humanEvaluatedCheckMethod_Noticeable ,
    ex:ramp_humanEvaluatedCheckMethod_Straight ,
    ex:ramp_humanEvaluatedCheckMethod_Surface .

ex:ramp_numericalCheckMethod_Width rdf:type aec3po:SWRLCheck , owl:NamedIndividual ;
  aec3po:operationalizes ex:ramp_numericalCheckStatement_Width . 

ex:ramp_humanEvaluatedCheckMethod_FixedStructure rdf:type aec3po:SWRLCheck , owl:NamedIndividual ;
  aec3po:operationalizes ex:ramp_humanEvaluatedCheckStatement_FixedStructure . 

ex:ramp_humanEvaluatedCheckMethod_ProtectiveEdge rdf:type aec3po:SWRLCheck , owl:NamedIndividual ;
  aec3po:operationalizes ex:ramp_humanEvaluatedCheckStatement_ProtectiveEdge .  

# Define a checkMethod AllProtectiveEdge that combines the two previous check methods related to the protective edge
ex:ramp_humanEvaluatedCheckMethod_AllProtectiveEdge rdf:type aec3po:SWRLCheck , owl:NamedIndividual ;
  aec3po:operationalizes 
    ex:ramp_humanEvaluatedCheckStatement_FixedStructure ,
    ex:ramp_humanEvaluatedCheckStatement_ProtectiveEdge .

ex:ramp_numericalCheckMethod_LowerLandingLenght rdf:type aec3po:SWRLCheck , owl:NamedIndividual ;
  aec3po:operationalizes ex:ramp_numericalCheckStatement_LowerLandingLenght .  

ex:ramp_numericalCheckMethod_UpperLandingLenght rdf:type aec3po:SWRLCheck , owl:NamedIndividual ;
  aec3po:operationalizes ex:ramp_numericalCheckStatement_UpperLandingLenght .   

# Define a checkMethod LandingLength that combines the two previous check CheckMethods related to the landing length
ex:ramp_numericalCheckMethod_LandingLength rdf:type aec3po:SWRLCheck , owl:NamedIndividual ;
  aec3po:operationalizes 
    ex:ramp_numericalCheckStatement_LowerLandingLenght ,
    ex:ramp_numericalCheckStatement_UpperLandingLenght .

ex:ramp_numericalCheckMethod_MaxGradient rdf:type aec3po:SWRLCheck , owl:NamedIndividual ;
  aec3po:operationalizes ex:ramp_numericalCheckStatement_MaxGradient .  

ex:ramp_numericalCheckMethod_LowerLandingElev rdf:type aec3po:SWRLCheck , owl:NamedIndividual ;
  aec3po:operationalizes ex:ramp_numericalCheckStatement_LowerLandingElev . 

ex:ramp_numericalCheckMethod_UpperLandingElev rdf:type aec3po:SWRLCheck , owl:NamedIndividual ;
  aec3po:operationalizes ex:ramp_numericalCheckStatement_UpperLandingElev .   

ex:ramp_numericalCheckMethod_IntLandingLenght rdf:type aec3po:SWRLCheck , owl:NamedIndividual ;
  aec3po:operationalizes ex:ramp_numericalCheckStatement_IntLandingLenght .  

ex:ramp_numericalCheckMethod_IntLandingElev rdf:type aec3po:SWRLCheck , owl:NamedIndividual;
  aec3po:operationalizes ex:ramp_numericalCheckStatement_IntLandingElev . 

ex:ramp_humanEvaluatedCheckMethod_IndoorCondition rdf:type aec3po:SWRLCheck , owl:NamedIndividual;
  aec3po:operationalizes ex:ramp_humanEvaluatedCheckStatement_IndoorCondition .  

# Define a checkMethod Gradient that combines the six previous check CheckMethods related to the gradient
ex:ramp_CheckMethod_Gradient rdf:type aec3po:SWRLCheck , owl:NamedIndividual ;
  aec3po:operationalizes 
    ex:ramp_numericalCheckStatement_MaxGradient ,
    ex:ramp_numericalCheckStatement_LowerLandingElev ,
    ex:ramp_numericalCheckStatement_UpperLandingElev ,
    ex:ramp_numericalCheckStatement_IntLandingLenght ,
    ex:ramp_numericalCheckStatement_IntLandingElev ,
    ex:ramp_humanEvaluatedCheckStatement_IndoorCondition .

# Instantiate the ORCheck for the Protective Edge
ex:ramp_ORCheck_ProtectiveEdge a aec3po:OrCheck , owl:NamedIndividual ;
    aec3po:hasSubCheck ex:ramp_humanEvaluatedCheckMethod_FixedStructure , ex:ramp_humanEvaluatedCheckMethod_ProtectiveEdge . 

# Instantiate the AndCheck for the Landing Length
ex:ramp_AndCheck_LandingLength a aec3po:AndCheck , owl:NamedIndividual ;
    aec3po:hasSubCheck ex:ramp_numericalCheckMethod_LowerLandingLenght , ex:ramp_numericalCheckMethod_UpperLandingLenght .  

# Instantiate the ORCheck for the Gradient
ex:ramp_ORCheck_Gradient a aec3po:OrCheck , owl:NamedIndividual ;
    aec3po:hasSubCheck 
        ex:ramp_numericalCheckMethod_LowerLandingElev ,
        ex:ramp_numericalCheckMethod_UpperLandingElev ,
        ex:ramp_numericalCheckMethod_IntLandingLenght ,
        ex:ramp_numericalCheckMethod_IntLandingElev ,
        ex:ramp_humanEvaluatedCheckMethod_IndoorCondition .

# Instantiate the ChecklistStatement as a subClassOf Statement and link it to all the checks with the property hasSubCheck
ex:ramp_checklistStatement a aec3po:ChecklistStatement , owl:NamedIndividual ;
    aec3po:hasSubCheck 
        ex:ramp_humanEvaluatedCheckMethod_Noticeable ,
        ex:ramp_humanEvaluatedCheckMethod_Straight ,
        ex:ramp_ORCheck_ProtectiveEdge ,
        ex:ramp_numericalCheckMethod_Width ,
        ex:ramp_AndCheck_LandingLength ,
        ex:ramp_numericalCheckMethod_MaxGradient ,
        ex:ramp_ORCheck_Gradient .

# ---- Start describing the "real" Ramp using dummy values

# Define the design of the ramp as a 3DModel
ex:ramp_design a aec3po:Design , owl:NamedIndividual ;
    rdf:type schema:3DModel .

# Define the design of the properties of the ramp
ex:design_rampNoticeable a aec3po:PropertyDesign , owl:NamedIndividual ;
    aec3po:hasValue true .

ex:design_rampStraight a aec3po:PropertyDesign , owl:NamedIndividual ;
    aec3po:hasValue true .    
   
ex:design_rampSurface a aec3po:PropertyDesign , owl:NamedIndividual;
    aec3po:hasValue true .

ex:design_rampWidth a aec3po:PropertyDesign , owl:NamedIndividual ;
    aec3po:hasValue 1800 ;
    qudt:hasUnit unit:MilliM .

ex:design_rampFixedStructure a aec3po:PropertyDesign , owl:NamedIndividual;
    aec3po:hasValue true .    

ex:design_rampProtectiveEdge a aec3po:PropertyDesign , owl:NamedIndividual;
    aec3po:hasValue 100 ;
    qudt:hasUnit unit:MilliM .

ex:design_rampLowerLandingLength a aec3po:PropertyDesign , owl:NamedIndividual;
    aec3po:hasValue 1800 ;
    qudt:hasUnit unit:MilliM .    

ex:design_rampUpperLandingLength a aec3po:PropertyDesign , owl:NamedIndividual ;
    aec3po:hasValue 2500 ;
    qudt:hasUnit unit:MilliM .      

ex:design_rampMaxGradient a aec3po:PropertyDesign , owl:NamedIndividual ;
    aec3po:hasValue 7 .  

ex:design_rampLowerLandingElev a aec3po:PropertyDesign , owl:NamedIndividual ;
    aec3po:hasValue 1000 ;
    qudt:hasUnit unit:MilliM . 

ex:design_rampUpperLandingElev a aec3po:PropertyDesign , owl:NamedIndividual ;
    aec3po:hasValue 1500 ;
    qudt:hasUnit unit:MilliM .   

ex:design_rampIntLandingLenght a aec3po:PropertyDesign , owl:NamedIndividual ;
    aec3po:hasValue 2500 ;
    qudt:hasUnit unit:MilliM .   

ex:design_rampIntLandingElev a aec3po:PropertyDesign , owl:NamedIndividual ;
    aec3po:hasValue 1300 ;
    qudt:hasUnit unit:MilliM .     

ex:design_rampIndoorCondition a aec3po:PropertyDesign , owl:NamedIndividual ;
    aec3po:hasValue true .  

# Define the design of each property of the ramp as PropertyKindDesign
ex:design_rampPropertyMaterialandArrangement a aec3po:PropertyKindDesign , owl:NamedIndividual ;
    aec3po:hasProperty 
         ex:design_rampNoticeable ,
         ex:design_rampStraight ,
         ex:design_rampSurface .

ex:design_rampPropertyProtectiveEdge a aec3po:PropertyKindDesign , owl:NamedIndividual ;
    aec3po:hasProperty 
         ex:design_rampProtectiveEdge ,
         ex:design_rampFixedStructure .

ex:design_rampPropertyLandingLength a aec3po:PropertyKindDesign , owl:NamedIndividual ;
    aec3po:hasProperty 
         ex:design_rampLowerLandingLength ,
         ex:design_rampUpperLandingLength .

ex:design_rampPropertyGradient a aec3po:PropertyKindDesign , owl:NamedIndividual;
    aec3po:hasProperty 
         ex:design_rampMaxGradient ,
         ex:design_rampLowerLandingElev ,
         ex:design_rampUpperLandingElev ,
         ex:design_rampIntLandingLenght ,
         ex:design_rampIntLandingElev ,
         ex:design_rampIndoorCondition . 

#Link all the properties design to the ramp design using hasProperty property     
  ex:ramp_design aec3po:hasProperty 
    ex:design_rampPropertyMaterialandArrangement ,
    ex:design_rampPropertyProtectiveEdge ,
    ex:design_rampWidth ,
    ex:design_rampPropertyLandingLength ,
    ex:design_rampPropertyGradient .

 # Link all the properties designs to the respective CheckMethods using forDesign property
ex:ramp_humanEvaluatedCheckMethod_MaterialandArrangement aec3po:forDesign ex:design_rampPropertyMaterialandArrangement .
ex:ramp_humanEvaluatedCheckMethod_AllProtectiveEdge aec3po:forDesign ex:design_rampPropertyProtectiveEdge .   
ex:ramp_numericalCheckMethod_Width aec3po:forDesign ex:design_rampWidth .    
ex:ramp_numericalCheckMethod_LandingLength aec3po:forDesign ex:design_rampPropertyLandingLength .
ex:ramp_CheckMethod_Gradient aec3po:forDesign ex:design_rampPropertyGradient .

# Conduct the checking act and generate a conformance report. 
ex:ramp_checkingAct a aec3po:CheckingAct , owl:NamedIndividual .

# Link the checkingAct to all the CheckMethods using usedMethod property
ex:ramp_checkingAct aec3po:usedMethod 
    ex:ramp_humanEvaluatedCheckMethod_MaterialandArrangement  ,
    ex:ramp_humanEvaluatedCheckMethod_AllProtectiveEdge ,
    ex:ramp_numericalCheckMethod_Width ,
    ex:ramp_numericalCheckMethod_LandingLength ,
    ex:ramp_CheckMethod_Gradient .

# Instantiate the conformance report 
ex:ramp_ConformanceReport a aec3po:ConformanceReport , owl:NamedIndividual ;
    aec3po:conforms true .

# Link the checkingAct to the conformance report using hasReport property
ex:ramp_checkingAct aec3po:hasReport ex:ramp_ConformanceReport .
